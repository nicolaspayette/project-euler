package ca.uqam.euler.nicolas.scala

/*

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

 */
object Problem044 {

  val pents = Stream.from(0).map(n ⇒ (n * (3 * n - 1)) / 2)
  val isPent = Util.memoize { n: Int ⇒
    pents.find(_ >= n).exists(_ == n)
  }

  def main(args: Array[String]) = Answer {
    // works, but not sure the algorithm is ok
    // because the diffs in my seq don't grow linearly
    (for {
      pk ← pents.drop(1)
      pj ← pents.drop(1).takeWhile(_ < pk).reverse
      if isPent(pk - pj)
      if isPent(pk + pj)
    } yield (pk, pj, pk - pj)).head
  }

}