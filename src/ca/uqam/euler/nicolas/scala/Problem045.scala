package ca.uqam.euler.nicolas.scala
/**
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 * Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
 * Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
 * Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...
 *
 * It can be verified that T285 = P165 = H143 = 40755.
 *
 * Find the next triangle number that is also pentagonal and hexagonal.
 *
 */
// Answer : 1533776805
object Problem045 {
import Stream._
  def main(args: Array[String]): Unit = Answer {
    def t(n: Int) = (0.5 * n * (n + 1)).toInt
    def p(n: Int) = (0.5 * n * (3 * n - 1)).toInt
    def h(n: Int) = n * (2 * n - 1)
    val ts = from(1) map t
    val ps = from(1) map p
    val hs = from(1) map h
    def isP(n:Int) = ps.find(n<=).map(n==).getOrElse(false)
    def isH(n:Int) = hs.find(n<=).map(n==).getOrElse(false)
    ts.filter(isP).filter(isH).take(3).last
    // Would be much faster if memoized...
  }

}