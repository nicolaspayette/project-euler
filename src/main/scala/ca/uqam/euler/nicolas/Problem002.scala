package ca.uqam.euler.nicolas

/**
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * Find the sum of all the even-valued terms in the sequence which do not exceed four million.
 *
 */
object Problem2 {
  import Stream._
  def fibs = {
    def f(a: Int, b: Int): Stream[Int] = a #:: f(b, a + b)
    f(0, 1)
  }
  def fibonaSum(upperBound: Int) = {
    val evenFib = fibs.filter(_ % 2 == 0)
    evenFib.takeWhile(_ <= upperBound).sum
  }
  def main(args: Array[String]) = Answer {
    fibonaSum(4000000)
  }
}